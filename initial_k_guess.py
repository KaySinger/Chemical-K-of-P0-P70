import numpy as np

# 已知的 p 值
p = [0.48976132623842145, 0.5332115144846119, 0.5790669973927187, 0.6272957895929011,
     0.6778446847301522, 0.7306380424320208, 0.785576767078702, 0.8425375096951462, 0.9013721227181279,
     0.9619073950869864, 1.0239450920622089, 1.0872623204074066, 1.151612235113411, 1.2167250987545433,
     1.2823096989226745, 1.3480551230800493, 1.4136328837199799, 1.4786993800541988, 1.5428986756983551,
     1.6058655651540152, 1.6672288954434837, 1.7266151032014985, 1.7836519220214258, 1.8379722100418827,
     1.8892178437800975, 1.9370436211922921, 1.9811211149705448, 2.0211424162482503, 2.056823709234541,
     2.0879086188553457, 2.1141712762388902, 2.1354190508096402, 2.1514949027801165, 2.162279315859197,
     2.1676917769061634, 2.1676917769061634, 2.162279315859197, 2.1514949027801165, 2.1354190508096402,
     2.1141712762388902, 2.0879086188553457, 2.056823709234541, 2.0211424162482503, 1.9811211149705448,
     1.9370436211922921, 1.8892178437800975, 1.8379722100418827, 1.7836519220214258, 1.7266151032014985,
     1.6672288954434837, 1.6058655651540152, 1.5428986756983551, 1.4786993800541988, 1.4136328837199799,
     1.3480551230800493, 1.2823096989226745, 1.2167250987545433, 1.151612235113411, 1.0872623204074066,
     1.0239450920622089, 0.9619073950869864, 0.9013721227181279, 0.8425375096951462, 0.785576767078702,
     0.7306380424320208, 0.6778446847301522, 0.6272957895929011, 0.5790669973927187, 0.5332115144846119,
     0.48976132623842145]

# 初始化 k 和 k_inv 数组
k = np.zeros(69)
k_inv = np.zeros(69)

# 已知的 k[0] 值
k[0] = 2

# 利用 dpdt[0] = 0 求解 k_inv[0]
k_inv[0] = k[0] * p[0]**2 / p[1]

# 利用中间的方程求解 k 和 k_inv
for i in range(1, 69):
    k[i] = k[i-1] * p[i-1]**2 / p[i]**2
    k_inv[i] = k_inv[i-1] * p[i] / p[i+1]


# 输出结果
print("k 数组:", k)
print("k_inv 数组:", k_inv)